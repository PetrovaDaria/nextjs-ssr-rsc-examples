import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { Suspense, lazy } from "react";
import Link from "next/link";

const RscDevtoolsPanel = lazy(() =>
    // @ts-expect-error ругается чего-то
    import("@rsc-parser/embedded").then(module => ({
      default: module.RscDevtoolsPanel,
    })),
);

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
      <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          borderBottom: '1px solid black',
          padding: '16px 24px'
      }}>
          <Link href={'/'}>Home</Link>
          <Link href={'/with-props'}>Пропсы</Link>
          <Link href={'/incorrect-props'}>Несериализуемые пропсы</Link>
          <Link href={'/server-function'}>Server Function</Link>
          <Link href={'/direct-window'}>window напрямую</Link>
          <Link href={'/indirect-window'}>window через хуки</Link>
          <Link href={'/date-now'}>Date.now()</Link>
          <Link href={'/no-ssr'}>No SSR</Link>
          <Link href={'/streaming'}>Стриминг</Link>
      </div>
        {children}
        <Suspense>
            <RscDevtoolsPanel />
        </Suspense>
      </body>
    </html>
  );
}
